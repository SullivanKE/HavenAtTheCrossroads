// <auto-generated />
using System;
using HavenAtTheCrossroads;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HavenAtTheCrossroads.Migrations
{
    [DbContext(typeof(HavenDbContext))]
    [Migration("20221111055132_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HavenAtTheCrossroads.Models.CharacterModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CharId")
                        .HasColumnType("int");

                    b.Property<int>("ConcurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SessionModelSessionId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("SessionModelSessionId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("HavenAtTheCrossroads.Models.MonsterModel", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Concurrency_id")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("Cr")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SessionModelSessionId")
                        .HasColumnType("int");

                    b.HasKey("SessionId");

                    b.HasIndex("SessionModelSessionId");

                    b.ToTable("Monsters");
                });

            modelBuilder.Entity("HavenAtTheCrossroads.Models.SessionItemModel", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SessionModelSessionId")
                        .HasColumnType("int");

                    b.Property<int?>("SessionModelSessionId1")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("SessionId");

                    b.HasIndex("SessionModelSessionId");

                    b.HasIndex("SessionModelSessionId1");

                    b.ToTable("SessionItems");
                });

            modelBuilder.Entity("HavenAtTheCrossroads.Models.SessionModel", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ConcurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("DM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Exp")
                        .HasColumnType("int");

                    b.Property<int>("Gold")
                        .HasColumnType("int");

                    b.Property<string>("InGameDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SessionId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("HavenAtTheCrossroads.Models.UserModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ConcurrencyId")
                        .HasColumnType("int");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HavenAtTheCrossroads.Models.CharacterModel", b =>
                {
                    b.HasOne("HavenAtTheCrossroads.Models.SessionModel", null)
                        .WithMany("Characters")
                        .HasForeignKey("SessionModelSessionId");
                });

            modelBuilder.Entity("HavenAtTheCrossroads.Models.MonsterModel", b =>
                {
                    b.HasOne("HavenAtTheCrossroads.Models.SessionModel", null)
                        .WithMany("Monsters")
                        .HasForeignKey("SessionModelSessionId");
                });

            modelBuilder.Entity("HavenAtTheCrossroads.Models.SessionItemModel", b =>
                {
                    b.HasOne("HavenAtTheCrossroads.Models.SessionModel", null)
                        .WithMany("AdHocs")
                        .HasForeignKey("SessionModelSessionId");

                    b.HasOne("HavenAtTheCrossroads.Models.SessionModel", null)
                        .WithMany("Items")
                        .HasForeignKey("SessionModelSessionId1");
                });
#pragma warning restore 612, 618
        }
    }
}
